rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the requesting user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection rules
    match /users/{userId} {
      // Allow users to read all user documents (for leaderboard)
      allow read: if isAuthenticated();
      
      // Allow users to create their own user document
      allow create: if isOwner(userId) && 
        request.resource.data.keys().hasAll(['name', 'totalScore', 'createdAt']) &&
        request.resource.data.totalScore == 0;
      
      // Allow users to update only their own user document
      allow update: if isOwner(userId);
      
      // Prevent deletion of user documents
      allow delete: if false;
    }
    
    // Activities collection rules
    match /activities/{activityId} {
      // Allow authenticated users to read all activities (for leaderboard calculations)
      allow read: if isAuthenticated();
      
      // Allow users to create activities only for themselves
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.keys().hasAll(['userId', 'activityName', 'points', 'timestamp']);
      
      // Allow users to update only their own activities
      allow update: if isAuthenticated() && 
        resource.data.userId == request.auth.uid &&
        request.resource.data.userId == request.auth.uid;
      
      // Allow users to delete only their own activities
      allow delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
    
    // Test activities collection (for testing only - remove in production)
    match /test_activities/{document=**} {
      allow read, write: if isAuthenticated();
    }
  }
}